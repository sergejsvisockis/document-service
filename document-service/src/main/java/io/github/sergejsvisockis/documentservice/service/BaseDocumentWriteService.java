package io.github.sergejsvisockis.documentservice.service;

import io.github.sergejsvisockis.documentservice.service.dto.SentDocumentMetadata;
import org.springframework.core.io.Resource;

/**
 * This class is a base document processing implementation.
 * Each method is to be implemented by each entity since that is possible
 * that some of them might be saved into the AWS S3, some into the SFT and some others into one another storage.
 * This is why an implementation myst be as generic as possible.
 *
 * @param <T> the request body coming out of the REST service.
 */
public abstract class BaseDocumentWriteService<T> {

    public SentDocumentMetadata process(T request) {
        T validatedRequest = validate(request);
        // TODO: Send SNS message here

        Resource pdfDocument = generate(validatedRequest);
        // TODO: Send SNS message here

        SentDocumentMetadata sentDocumentMetadata = sendToStorage(pdfDocument);
        // TODO: Send SNS message here

        SentDocumentMetadata savedDocument = save(sentDocumentMetadata);
        // TODO: Send SNS message here
        return savedDocument;
    }

    /**
     * Validates document request body, which comes from the REST service.
     *
     * @param request the request body
     * @return validated request body
     */
    public abstract T validate(T request);

    /**
     * Supposed to generate PDF document which is supposed to be saved into some sort of storage later on.
     *
     * @param request the request containing the document metadata to insert into the predefined template.
     *                Generator could be any 3rd party subsystem.
     * @return Since PDF is being generated by the 3rd party system via the REST interface the {@link Resource}
     * is supposed to abstract the file itself.
     */
    public abstract Resource generate(T request);

    /**
     * Sent the PDF document into the storage.
     * Any storage could be an AWS S3, SFTP, etc.
     *
     * @param request {@link Resource} containing an actual PDF as an {@link java.io.InputStream}  so as its metadata.
     * @return {@link SentDocumentMetadata} saved document metadata
     */
    public abstract SentDocumentMetadata sendToStorage(Resource request);

    /**
     * Supposed to write saved document metadata.
     *
     * @param request saved document request metadata.
     * @return {@link SentDocumentMetadata} saved document metadata.
     */
    public abstract SentDocumentMetadata save(SentDocumentMetadata request);

}
